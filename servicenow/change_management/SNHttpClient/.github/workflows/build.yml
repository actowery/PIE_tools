name: Build

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-push-images:
    name: Build and Push Images
    runs-on: self-hosted
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Build Docker images
      shell: bash
      run: |
        echo running on branch ${GITHUB_REF##*/}
        if [ ${GITHUB_REF##*/} = "master" ]; then
          TAG=master
        else
          TAG=${{ github.head_ref }}
        fi
        make base-image
        make -j SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG BUILD_BASE="" image scarp-init_image hasura-metadata_image hasura-graphql-engine_image
    - name: Push Docker images to Artifactory
      shell: bash
      env:
        GCR_CREDS: ${{ secrets.GCR_PLATFORM_SERVICES_SERVICE_ACCOUNT }}
        CREDS: ${{ secrets.artifactory_creds }}
      run: |
        echo running on branch ${GITHUB_REF##*/}
        if [ ${GITHUB_REF##*/} = "master" ]; then
          TAG=master
        else
          TAG=${{ github.head_ref }}
          unset GCR_CREDS
        fi
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG publish
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG APP_NAME=scarp-init publish
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG APP_NAME=hasura-metadata publish
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG APP_NAME=hasura-graphql-engine publish
    - name: Restart pod in unstable demo env
      run: |
        if [ ${GITHUB_REF##*/} = "master" ]; then
          curl -X POST ${{ secrets.UNSTABLE_URL }} -H "Content-Type: application/json"  -H "Authorization: Bearer ${{ secrets.UNSTABLE_TOKEN }}" -d "{\"images\":[\"scarp\", \"scarp-init\", \"hasura-metadata\", \"hasura-graphql-engine\"]}" --insecure
        fi
      shell: bash
  build-and-push-images-arm64:
    if: github.ref == 'refs/heads/master'
    name: Build and Push Images (ARM64)
    runs-on: self-hosted
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Build Docker images
      shell: bash
      run: |
        echo running on branch ${GITHUB_REF##*/}
        if [ ${GITHUB_REF##*/} = "master" ]; then
          TAG=master
        else
          TAG=${{ github.head_ref }}
        fi
        make base-image ARCH=arm64
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG image ARCH=arm64 BUILD_BASE=""
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG scarp-init_image ARCH=arm64 BUILD_BASE=""
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG hasura-metadata_image ARCH=arm64 BUILD_BASE=""
    - name: Push Docker images to Artifactory
      shell: bash
      env:
        GCR_CREDS: ${{ secrets.GCR_PLATFORM_SERVICES_SERVICE_ACCOUNT }}
        CREDS: ${{ secrets.artifactory_creds }}
      run: |
        echo running on branch ${GITHUB_REF##*/}
        if [ ${GITHUB_REF##*/} = "master" ]; then
          TAG=master
        else
          TAG=${{ github.head_ref }}
          unset GCR_CREDS
        fi
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG publish ARCH=arm64
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG APP_NAME=scarp-init publish ARCH=arm64
        make SHA="$(git rev-parse --short ${GITHUB_SHA})" DOCKER_TAG=$TAG APP_NAME=hasura-metadata publish ARCH=arm64
