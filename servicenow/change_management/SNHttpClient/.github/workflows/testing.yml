name: Testing

on:
  pull_request:
  workflow_dispatch:

jobs:
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up Go environment
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: Run unit tests
        run: |
          make test
  e2e-test:
    name: E2E Test
    runs-on: self-hosted
    steps:
      - name: Wait for Images to build
        uses: fountainhead/action-wait-for-check@v1.1.0
        id: wait-for-build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: Build and Push Images
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          timeoutSeconds: 1200
      - uses: actions/checkout@v3
      - name: Clone E2E
        env:
          CI_USER: ${{ secrets.ACTIONS_USER }}
          CI_TOKEN: ${{ secrets.COMP_GITHUB_TOKEN }}
        shell: bash
        run: |
          GIT_BRANCH=${{ github.head_ref }} make e2e-clone
      - name: Run E2E tests
        run: |
          source comply-e2e/compose/setImageTags.sh ${{ github.head_ref }} && make e2e CI=TRUE DOCKER_NETWORK=${{ github.sha }}
        shell: bash
      - name: Collect Screenshots
        if: failure()
        run: make -C comply-e2e screenshots DOCKER_NETWORK=${{ github.sha }}
        shell: bash
      - name: Archive Screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: comply-e2e/e2e-screenshots/*/*
      - name: Cleanup
        if: always()
        run: make e2e-cleanup CI=TRUE DOCKER_NETWORK=${{ github.sha }}
        shell: bash
